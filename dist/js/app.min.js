"use strict";function _createForOfIteratorHelper(e,t){var r,a,n,o,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return a=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){a=!0,n=e},f:function(){try{r||null==i.return||i.return()}finally{if(a)throw n}}};if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),o=0,{s:t=function(){},n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,a=new Array(t);r<t;r++)a[r]=e[r];return a}var randomIconLargeGrid,randomIconSmallGrid,randomNumberLargeGrid,randomNumberSmallGrid,getThemeCheckPair,buttons=document.querySelectorAll(".button-box button "),start=document.querySelector(".button-box__button--primary"),quantityPlayers=[],getSize=[],getTheme=[],arrayNumbers=[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18],arrayIcons=['<i class="fa-solid fa-wheat-awn"></i>','<i class="fa-solid fa-anchor"></i>','<i class="fa-solid fa-worm"></i>','<i class="fa-solid fa-tower-cell"></i>','<i class="fa-solid fa-mountain-sun"></i>','<i class="fa-solid fa-plane-up"></i>','<i class="fa-solid fa-fish-fins"></i>','<i class="fa-solid fa-clover"></i>','<i class="fa-solid fa-mosquito"></i>','<i class="fa-solid fa-oil-well"></i>','<i class="fa-solid fa-cubes-stacked"></i>','<i class="fa-solid fa-bucket"></i>','<i class="fa-solid fa-vault"></i>','<i class="fa-solid fa-shield-dog"></i>','<i class="fa-solid fa-plant-wilt"></i>','<i class="fa-solid fa-road-barrier"></i>','<i class="fa-solid fa-ghost"></i>','<i class="fa-solid fa-chess"></i>'],gridID=0,counterClicks=1,countMoves=0,countPairs=0,changePlayerAfterMove=1,setRandomNumber=function(){var e=Array(2).fill(arrayNumbers).flat(),e=(e.sort(function(){return.5-Math.random()}),randomNumberLargeGrid=e,arrayNumbers.slice(0,8));(e=Array(2).fill(e).flat()).sort(function(){return.5-Math.random()}),randomNumberSmallGrid=e},setRandomIcon=(setRandomNumber(),function(){var e=Array(2).fill(arrayIcons).flat(),e=(e.sort(function(){return.5-Math.random()}),randomIconLargeGrid=e,arrayIcons.splice(0,8));(e=Array(2).fill(e).flat()).sort(function(){return.5-Math.random()}),randomIconSmallGrid=e}),check=(setRandomIcon(),buttons.forEach(function(e){e.addEventListener("click",function(e){for(var t=e.target.parentElement.children,r=0;r<t.length;r++)t[r].hasAttribute("autofocus","")&&(t[r].removeAttribute("autofocus"),e.target.setAttribute("autofocus",""));var a=document.querySelectorAll("[autofocus]");quantityPlayers.push(a),getSize.push(a),getTheme.push(a)})})),getUserSettings=function(e,t,r){var e=e.slice(-1),t=t.slice(-1),r=r.slice(-1),a=[];r.forEach(function(e){e=e[0].textContent;a.push(e),getThemeCheckPair=e}),e.forEach(function(e){e=e[1].textContent;createsRelevantMode(e),multiplayerMode(e)}),t.forEach(function(e){e=e[2].textContent;a.push(e)}),numberMapSize(a)},numberMapSize=function(e){var t=document.querySelector(".small-grid-container"),r=document.querySelector(".large-grid-container"),a=0;if("4x4"==e[1]&&"Numbers"==e[0])for(var n=0;n<16;n++){gridID++;var o=document.createElement("div");o.classList.add("single-card-box"),o.setAttribute("id","".concat(gridID)),o.innerHTML='\n\t\t\t<div class="card">\n\t\t\t\t<div class="theback"><i class="fa-solid fa-question"></i></div>\n\t\t\t\t<div class="thefront">'.concat(randomNumberSmallGrid[a++],"</div>\n\t\t\t</div>"),t.appendChild(o),r.classList.add("toggle-large-grid")}else if("4x4"==e[1]&&"Icons"==e[0])for(var i=0;i<16;i++){gridID++;var c=document.createElement("div");c.classList.add("single-card-box"),c.setAttribute("id","".concat(gridID)),c.innerHTML='\n\t\t\t<div class="card">\n\t\t\t<div class="theback"><i class="fa-solid fa-question"></i></div>\n\t\t\t<div class="thefront">'.concat(randomIconSmallGrid[a++],"</div>\n\t\t\t</div>"),t.appendChild(c),r.classList.add("toggle-large-grid")}else if("6x6"==e[1]&&"Icons"==e[0])for(var s=0;s<36;s++){var l=document.createElement("div");l.classList.add("single-card-box"),l.setAttribute("id","".concat(gridID)),l.innerHTML='\n\t\t\t<div class="card">\n\t\t\t<div class="theback"><i class="fa-solid fa-question"></i></div>\n\t\t\t<div class="thefront">'.concat(randomIconLargeGrid[a++],"</div>\n\t\t\t</div>"),r.appendChild(l),t.classList.add("toggle-small-grid")}else if("6x6"==e[1]&&"Numbers"==e[0])for(var d=0;d<36;d++){var u=document.createElement("div");u.classList.add("single-card-box"),u.setAttribute("id","".concat(gridID)),u.innerHTML='\n\t\t\t<div class="card">\n\t\t\t<div class="theback"><i class="fa-solid fa-question"></i></div>\n\t\t\t\t<div class="thefront">'.concat(randomNumberLargeGrid[a++],"</div>\n\t\t\t\t</div>"),r.appendChild(u),t.classList.add("toggle-small-grid")}},multiplayerMode=function(e){for(var t=document.querySelector(".footer-multiplayer"),r=1,a=1,n=1,o=0;o<e;o++){var i=document.createElement("div");i.classList.add("multiplayer-box-item"),i.setAttribute("id","player".concat(n++)),i.innerHTML='\n\t\t<div class="player">\n\t\t\t<p class="short-name">P'.concat(a++,'</p>\n\t\t\t<p class="long-name">Player ').concat(r++,'</p>\n\t\t\t<p class="player__pair-number ">4</p>\n\t\t</div>'),t.appendChild(i)}},createsRelevantMode=function(e){var t=document.querySelector(".footer-single"),r=document.querySelector(".footer-multiplayer");1==e?(t.style.display="flex",r.style.display="none"):1<e&&(t.style.display="none",multiplayerMode(),r.style.display="flex")},prepareGame=function(){var e=document.querySelector(".start-game"),t=document.querySelector(".game-content");e.classList.toggle("toggle-start-setup"),t.classList.toggle("toggle-game-content"),getUserSettings(quantityPlayers,getSize,getTheme),createsRelevantMode()};function checkNumberPairs(){var a,n,o,i,e,t=document.querySelectorAll(".single-card-box .card"),c=!1,r=_createForOfIteratorHelper(t);try{var s=function(){function r(){a.classList.toggle("reverse"),n.classList.toggle("reverse"),c=!1}e.value.addEventListener("click",function(e){var t;c||"Numbers"!=getThemeCheckPair||(t=e.currentTarget,1==counterClicks?((a=t).classList.toggle("reverse"),o=e.currentTarget.textContent,counterClicks++):2==counterClicks&&((n=t).classList.toggle("reverse"),i=e.currentTarget.textContent,counterClicks++,o==i?(countMoves+=1,countPairs++):(c=!0,setTimeout(r,1e3),console.log("nie równa się"),countMoves+=1),changePlayerAfterMove++,switchTurn(),counterClicks=1),countMoveQuantity(),switchTurn())})};for(r.s();!(e=r.n()).done;)s()}catch(e){r.e(e)}finally{r.f()}}function checkIconPairs(){var a,n,o,i,e,t=document.querySelectorAll(".single-card-box .card"),c=!1,r=_createForOfIteratorHelper(t);try{var s=function(){function r(){a.classList.toggle("reverse"),n.classList.toggle("reverse"),c=!1}e.value.addEventListener("click",function(e){var t;c||"Icons"!=getThemeCheckPair||(t=e.currentTarget,1==counterClicks?((a=t).classList.toggle("reverse"),o=e.currentTarget.getElementsByTagName("i")[1].className,counterClicks++):2==counterClicks&&((n=t).classList.toggle("reverse"),i=e.currentTarget.getElementsByTagName("i")[1].className,counterClicks++,o==i?(console.log("to prawda, równa się"),countMoves+=1,countPairs++):(c=!0,setTimeout(r,1e3),console.log("nie równa się"),countMoves+=1),changePlayerAfterMove++,switchTurn(),counterClicks=1),countMoveQuantity())})};for(r.s();!(e=r.n()).done;)s()}catch(e){r.e(e)}finally{r.f()}}var switchTurn=function(){var e=document.querySelectorAll(".player"),t=document.createElement("div"),r=(t.classList.add("target-turn"),document.createElement("p")),a=(r.classList.add("turn-info"),r.textContent="current turn",e.length);console.log(a),1==changePlayerAfterMove&&changePlayerAfterMove<=a?(e[0].style.backgroundColor="#fda517",e[0].appendChild(t),e[0].appendChild(r)):2==changePlayerAfterMove&&changePlayerAfterMove<=a?(document.querySelector(".target-turn").remove(),document.querySelector(".turn-info").remove(),e[0].style.backgroundColor="#dfe7ec",e[1].appendChild(t),e[1].appendChild(r),e[1].style.backgroundColor="#fda517"):3==changePlayerAfterMove&&changePlayerAfterMove<=a?(document.querySelector(".target-turn").remove(),document.querySelector(".turn-info").remove(),e[1].style.backgroundColor="#dfe7ec",e[2].appendChild(t),e[2].appendChild(r),e[2].style.backgroundColor="#fda517"):(document.querySelector(".target-turn").remove(),document.querySelector(".turn-info").remove(),a=e[e.length-1],console.log(a),e[0].style.backgroundColor="#fda517",e[0].appendChild(t),e[0].appendChild(r),changePlayerAfterMove=1),console.log(changePlayerAfterMove)},countMoveQuantity=function(){document.querySelector("#moves").textContent=countMoves};function loadGame(){prepareGame(),checkNumberPairs(),checkIconPairs(),switchTurn()}start.addEventListener("click",loadGame);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJyYW5kb21JY29uTGFyZ2VHcmlkIiwicmFuZG9tSWNvblNtYWxsR3JpZCIsInJhbmRvbU51bWJlckxhcmdlR3JpZCIsInJhbmRvbU51bWJlclNtYWxsR3JpZCIsInNtYWxsR3JpZCIsImJ1dHRvbnMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzdGFydCIsInF1ZXJ5U2VsZWN0b3IiLCJxdWFudGl0eVBsYXllcnMiLCJnZXRTaXplIiwiY291bnRlckNsaWNrcyIsIk1hdGgiLCJjb3VudE1vdmVzIiwiY2hhbmdlUGxheWVyQWZ0ZXJNb3ZlIiwic2V0UmFuZG9tTnVtYmVyIiwic2V0UmFuZG9tSWNvbiIsIkFycmF5IiwiZmlsbCIsImZsYXQiLCJsYXJnZUdyaWQiLCJzb3J0IiwicmFuZG9tIiwic21hbGxBcnJheSIsImNoZWNrIiwiZm9yRWFjaCIsImFycmF5SWNvbnMiLCJjaGVja0F0dHJpYnV0ZSIsImN1cnJlbnRCdXR0b24iLCJ0YXJnZXQiLCJhZGRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJjdXJyZW50U2V0dGluZ3MiLCJidG4iLCJhZGRFdmVudExpc3RlbmVyIiwibnVtYmVyT2ZQbGF5ZXJzIiwiZSIsImdldFVzZXJTZXR0aW5ncyIsImxhc3RTZXR0aW5nVXBkYXRlIiwic2xpY2UiLCJncmlkQXJlYSIsImhhc0F0dHJpYnV0ZSIsImdldFRoZW1lIiwiaSIsInJlbW92ZUF0dHJpYnV0ZSIsInB1c2giLCJnZXRSZWxldmFudFRoZW1lIiwiZ2V0VGhlbWVDaGVja1BhaXIiLCJncmlkIiwidGV4dENvbnRlbnQiLCJnZXRSZWxldmFudEdyaWQiLCJjdXJyZW50VGhlbWUiLCJudW1iZXJNYXBTaXplIiwidGhlbWUiLCJhcnIiLCJzbWFsbEdyaWRDb250YWluZXIiLCJlbCIsImdyaWRTbWFsbFNpemUiLCJjcmVhdGVzUmVsZXZhbnRNb2RlIiwibXVsdGlwbGF5ZXJNb2RlIiwidGhlbWVTaXplQXJyYXkiLCJncmlkSUQiLCJjcmVhdGVDYXJkSXRlbSIsImNsYXNzTGlzdCIsImxhcmdlR3JpZENvbnRhaW5lciIsImluZGV4IiwiaW5uZXJIVE1MIiwiY3JlYXRlRWxlbWVudCIsImdyaWRCaWdTaXplIiwiYXBwZW5kQ2hpbGQiLCJhZGQiLCJjb25jYXQiLCJtdWx0aXBsYXllckNvbnRhaW5lciIsInBsYXllckl0ZW0iLCJtdWx0aXBsYXllciIsImRpc3BsYXkiLCJwbGF5ZXIiLCJzaW5nbGVwbGF5ZXIiLCJzdHlsZSIsImVudGlyZU1lbnUiLCJzaG93R2FtZUNvbnRlbnQiLCJ0b2dnbGUiLCJjaGVja051bWJlclBhaXJzIiwiY2FyZEJveCIsIklEX2Rlc2t0b3AiLCJJRF9tb2JpbGUiLCJ0b2dnbGVSZXZlcnNlQ2xhc3NlMSIsIklEIiwiX2l0ZXJhdG9yIiwicGxheWVycyIsIl9sb29wIiwiY2FyZCIsInZhbHVlIiwiY3VycmVudFRhcmdldCIsInRvZ2dsZVJldmVyc2VDbGFzc2UyIiwiZWxlbWVudCIsInNlY29uZENsaWNrIiwiZmlyc3RDbGljayIsInByZXBhcmVHYW1lIiwic3dpdGNoVHVybiIsInNldFRpbWVvdXQiLCJwcm9jZWVkIiwiY29uc29sZSIsIl9zdGVwIiwid3JvbmciLCJjb3VudE1vdmVRdWFudGl0eSIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiZmxpcE92ZXIiLCJlcnIiLCJjaGVja0ljb25QYWlycyIsIl9pdGVyYXRvcjIiLCJfc3RlcDIiLCJfbG9vcDIiLCJjb3VudFBhaXJzIiwicyIsIm4iLCJkb25lIiwiZiIsImxvZyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY2xhc3NOYW1lIiwidHVybkluZm8iLCJxdWFudGl0eU9mUGxheWVycyIsImFsbFBsYXllcnMiLCJ0YXJnZXRUdXJuIiwidHVybiIsImJhY2tncm91bmRDb2xvciIsInJlbW92ZSIsImxhc3RFbGVtZW50IiwibW92ZXNJbnB1dCIsImxvYWRHYW1lIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoib29DQUFBLElBMENFQSxv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LEVBQUEsR0FBQXRELFlBQUF1RCxDQUFBLEVBQ0FELEVBQUEsR0FBQXRELFlBQUFvRCxDQUFBLEVBdEJFM0csc0JBQXdCLEdBeUIxQndGLFFBQUFnQixJQUFBeEcscUJBQUEsQ0FDQSxFQUVBMkYsa0JBQUEsV0FDQXBHLFNBQUFHLGNBQUEsUUFBQSxFQUNBeUMsWUFBQXBDLFVBQ0EsRUFFQSxTQUFBcUgsV0FDQWhDLFlBQUEsRUFDQWhCLGlCQUFBLEVBQ0EyQixlQUFBLEVBQ0FWLFdBQUEsQ0FDQSxDQUNBNUYsTUFBQTJCLGlCQUFBLFFBQUFnRyxRQUFBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBidXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJ1dHRvbi1ib3ggYnV0dG9uICcpXHJcbmNvbnN0IHN0YXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi1ib3hfX2J1dHRvbi0tcHJpbWFyeScpXHJcblxyXG5sZXQgcXVhbnRpdHlQbGF5ZXJzID0gW10gLy8gVXNlciBzZXR0aW5ncyAnbnVtYmVycyBvZiBwbGF5ZXJzJ1xyXG5sZXQgZ2V0U2l6ZSA9IFtdIC8vIFVzZXIgc2V0dGluZ3MgJ2dyaWQgc2l6ZSdcclxubGV0IGdldFRoZW1lID0gW10gLy8gVXNlciBzZXR0aW5ncyAnc2VsZWN0IHRoZW1lJ1xyXG5sZXQgYXJyYXlOdW1iZXJzID0gWzAsIDEsIDIsIDMsIDUsIDYsIDcsIDgsIDksIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsIDE2LCAxNywgMThdXHJcbmxldCBhcnJheUljb25zID0gW1xyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLXdoZWF0LWF3blwiPjwvaT4nLFxyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLWFuY2hvclwiPjwvaT4nLFxyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLXdvcm1cIj48L2k+JyxcclxuXHQnPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS10b3dlci1jZWxsXCI+PC9pPicsXHJcblx0JzxpIGNsYXNzPVwiZmEtc29saWQgZmEtbW91bnRhaW4tc3VuXCI+PC9pPicsXHJcblx0JzxpIGNsYXNzPVwiZmEtc29saWQgZmEtcGxhbmUtdXBcIj48L2k+JyxcclxuXHQnPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1maXNoLWZpbnNcIj48L2k+JyxcclxuXHQnPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1jbG92ZXJcIj48L2k+JyxcclxuXHQnPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1tb3NxdWl0b1wiPjwvaT4nLFxyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLW9pbC13ZWxsXCI+PC9pPicsXHJcblx0JzxpIGNsYXNzPVwiZmEtc29saWQgZmEtY3ViZXMtc3RhY2tlZFwiPjwvaT4nLFxyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLWJ1Y2tldFwiPjwvaT4nLFxyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLXZhdWx0XCI+PC9pPicsXHJcblx0JzxpIGNsYXNzPVwiZmEtc29saWQgZmEtc2hpZWxkLWRvZ1wiPjwvaT4nLFxyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLXBsYW50LXdpbHRcIj48L2k+JyxcclxuXHQnPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1yb2FkLWJhcnJpZXJcIj48L2k+JyxcclxuXHQnPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1naG9zdFwiPjwvaT4nLFxyXG5cdCc8aSBjbGFzcz1cImZhLXNvbGlkIGZhLWNoZXNzXCI+PC9pPicsXHJcbl1cclxubGV0IHJhbmRvbUljb25MYXJnZUdyaWQgLy8gR2VuZXJhdGVzIHJhbmRvbSBJY29ucyBpbiBnYW1lXHJcbmxldCByYW5kb21JY29uU21hbGxHcmlkIC8vXHJcbmxldCByYW5kb21OdW1iZXJMYXJnZUdyaWQgLy8gR2VuZXJhdGVzIHJhbmRvbSBOdW1iZXJzIGluIGdhbWVcclxubGV0IHJhbmRvbU51bWJlclNtYWxsR3JpZCAvL1xyXG5sZXQgZ3JpZElEID0gMCAvLyBhZGRzIElEIHRvIGVhY2ggY3JlYXRlZCBlbGVtZW50XHJcbmxldCBnZXRUaGVtZUNoZWNrUGFpclxyXG5sZXQgY291bnRlckNsaWNrcyA9IDFcclxubGV0IGNvdW50TW92ZXMgPSAwXHJcbmxldCBjb3VudFBhaXJzID0gMFxyXG5sZXQgY2hhbmdlUGxheWVyQWZ0ZXJNb3ZlID0gMVxyXG5cclxuLy8gQWRkcyByYW5kb20gbnVtYmVyIHRvIGVhY2ggY2FyZFxyXG5jb25zdCBzZXRSYW5kb21OdW1iZXIgPSAoKSA9PiB7XHJcblx0Y29uc3QgbGFyZ2VHcmlkID0gQXJyYXkoMikuZmlsbChhcnJheU51bWJlcnMpLmZsYXQoKVxyXG5cdGxhcmdlR3JpZC5zb3J0KGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiAwLjUgLSBNYXRoLnJhbmRvbSgpXHJcblx0fSlcclxuXHRyYW5kb21OdW1iZXJMYXJnZUdyaWQgPSBsYXJnZUdyaWRcclxuXHJcblx0bGV0IHNtYWxsR3JpZCA9IGFycmF5TnVtYmVycy5zbGljZSgwLCA4KVxyXG5cdHNtYWxsR3JpZCA9IEFycmF5KDIpLmZpbGwoc21hbGxHcmlkKS5mbGF0KClcclxuXHRzbWFsbEdyaWQuc29ydChmdW5jdGlvbiAoKSB7XHJcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5yYW5kb20oKVxyXG5cdH0pXHJcblx0cmFuZG9tTnVtYmVyU21hbGxHcmlkID0gc21hbGxHcmlkXHJcbn1cclxuc2V0UmFuZG9tTnVtYmVyKClcclxuXHJcbi8vIEFkZHMgcmFuZG9tIEljb24gdG8gZWFjaCBjYXJkXHJcbmNvbnN0IHNldFJhbmRvbUljb24gPSAoKSA9PiB7XHJcblx0Ly8gSWNvbnMgZm9yIGxhcmdlIGdyaWQgc2l6ZVxyXG5cdGNvbnN0IGxhcmdlR3JpZCA9IEFycmF5KDIpLmZpbGwoYXJyYXlJY29ucykuZmxhdCgpXHJcblx0bGFyZ2VHcmlkLnNvcnQoZnVuY3Rpb24gKCkge1xyXG5cdFx0cmV0dXJuIDAuNSAtIE1hdGgucmFuZG9tKClcclxuXHR9KVxyXG5cdHJhbmRvbUljb25MYXJnZUdyaWQgPSBsYXJnZUdyaWRcclxuXHQvLyBJY29ucyBmb3Igc21hbGwgZ3JpZCBzaXplXHJcblx0bGV0IHNtYWxsQXJyYXkgPSBhcnJheUljb25zLnNwbGljZSgwLCA4KVxyXG5cdHNtYWxsQXJyYXkgPSBBcnJheSgyKS5maWxsKHNtYWxsQXJyYXkpLmZsYXQoKVxyXG5cdHNtYWxsQXJyYXkuc29ydChmdW5jdGlvbiAoKSB7XHJcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5yYW5kb20oKVxyXG5cdH0pXHJcblx0cmFuZG9tSWNvblNtYWxsR3JpZCA9IHNtYWxsQXJyYXlcclxufVxyXG5zZXRSYW5kb21JY29uKClcclxuXHJcbi8vIENIRUNLUyBXSEVSRSBDVVJSRU5UTFkgVEhFICdBVVRPRk9DVVMnIEFUVFJJQlVURSBJU1xyXG5jb25zdCBjaGVjayA9IGJ1dHRvbnMuZm9yRWFjaChidG4gPT4ge1xyXG5cdGNvbnN0IGNoZWNrQXR0cmlidXRlID0gZSA9PiB7XHJcblx0XHRjb25zdCBjdXJyZW50QnV0dG9uID0gZS50YXJnZXQucGFyZW50RWxlbWVudC5jaGlsZHJlblxyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjdXJyZW50QnV0dG9uLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGlmIChjdXJyZW50QnV0dG9uW2ldLmhhc0F0dHJpYnV0ZSgnYXV0b2ZvY3VzJywgJycpKSB7XHJcblx0XHRcdFx0Y29uc3QgcmVtb3ZlQXR0cmlidXRlID0gY3VycmVudEJ1dHRvbltpXS5yZW1vdmVBdHRyaWJ1dGUoJ2F1dG9mb2N1cycpXHJcblx0XHRcdFx0Y29uc3QgYWRkQXR0cmlidXRlID0gZS50YXJnZXQuc2V0QXR0cmlidXRlKCdhdXRvZm9jdXMnLCAnJylcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Y29uc3QgY3VycmVudFNldHRpbmdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2F1dG9mb2N1c10nKVxyXG5cdFx0cXVhbnRpdHlQbGF5ZXJzLnB1c2goY3VycmVudFNldHRpbmdzKVxyXG5cdFx0Z2V0U2l6ZS5wdXNoKGN1cnJlbnRTZXR0aW5ncylcclxuXHRcdGdldFRoZW1lLnB1c2goY3VycmVudFNldHRpbmdzKVxyXG5cdH1cclxuXHRidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjaGVja0F0dHJpYnV0ZSlcclxufSlcclxuXHJcbi8vIERPV05MT0FEUyBDVVJSRU5UIFNFVFRJTkdTXHJcbmNvbnN0IGdldFVzZXJTZXR0aW5ncyA9IChxdWFudGl0eVBsYXllcnMsIGdldFNpemUsIGdldFRoZW1lKSA9PiB7XHJcblx0Y29uc3QgbGFzdFNldHRpbmdVcGRhdGUgPSBxdWFudGl0eVBsYXllcnMuc2xpY2UoLTEpXHJcblx0Y29uc3QgZ3JpZEFyZWEgPSBnZXRTaXplLnNsaWNlKC0xKVxyXG5cdGNvbnN0IGN1cnJlbnRUaGVtZSA9IGdldFRoZW1lLnNsaWNlKC0xKVxyXG5cdGxldCBhcnIgPSBbXVxyXG5cdGN1cnJlbnRUaGVtZS5mb3JFYWNoKHRoZW1lID0+IHtcclxuXHRcdGNvbnN0IGdldFJlbGV2YW50VGhlbWUgPSB0aGVtZVswXS50ZXh0Q29udGVudFxyXG5cdFx0YXJyLnB1c2goZ2V0UmVsZXZhbnRUaGVtZSlcclxuXHRcdGdldFRoZW1lQ2hlY2tQYWlyID0gZ2V0UmVsZXZhbnRUaGVtZSAvL2NoZWNrIFBhaXIgZnVuY3Rpb25cclxuXHR9KVxyXG5cdGxhc3RTZXR0aW5nVXBkYXRlLmZvckVhY2goZWwgPT4ge1xyXG5cdFx0Y29uc3QgbnVtYmVyT2ZQbGF5ZXJzID0gZWxbMV0udGV4dENvbnRlbnRcclxuXHRcdGNyZWF0ZXNSZWxldmFudE1vZGUobnVtYmVyT2ZQbGF5ZXJzKVxyXG5cdFx0bXVsdGlwbGF5ZXJNb2RlKG51bWJlck9mUGxheWVycylcclxuXHR9KVxyXG5cdGdyaWRBcmVhLmZvckVhY2goZ3JpZCA9PiB7XHJcblx0XHRjb25zdCBnZXRSZWxldmFudEdyaWQgPSBncmlkWzJdLnRleHRDb250ZW50XHJcblx0XHRhcnIucHVzaChnZXRSZWxldmFudEdyaWQpXHJcblx0fSlcclxuXHRudW1iZXJNYXBTaXplKGFycilcclxufVxyXG4vLyBDcmVhdGVzIHJlbGV2YW50IHNpemUgb2YgbWFwXHJcbmNvbnN0IG51bWJlck1hcFNpemUgPSB0aGVtZVNpemVBcnJheSA9PiB7XHJcblx0Y29uc3Qgc21hbGxHcmlkQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNtYWxsLWdyaWQtY29udGFpbmVyJylcclxuXHRjb25zdCBsYXJnZUdyaWRDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGFyZ2UtZ3JpZC1jb250YWluZXInKVxyXG5cdGxldCBpbmRleCA9IDBcclxuXHRjb25zdCBncmlkU21hbGxTaXplID0gMTZcclxuXHRjb25zdCBncmlkQmlnU2l6ZSA9IDM2XHJcblxyXG5cdGlmICh0aGVtZVNpemVBcnJheVsxXSA9PSAnNHg0JyAmJiB0aGVtZVNpemVBcnJheVswXSA9PSAnTnVtYmVycycpIHtcclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgZ3JpZFNtYWxsU2l6ZTsgaSsrKSB7XHJcblx0XHRcdGdyaWRJRCsrXHJcblxyXG5cdFx0XHRjb25zdCBjcmVhdGVDYXJkSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcblx0XHRcdGNyZWF0ZUNhcmRJdGVtLmNsYXNzTGlzdC5hZGQoJ3NpbmdsZS1jYXJkLWJveCcpXHJcblx0XHRcdGNyZWF0ZUNhcmRJdGVtLnNldEF0dHJpYnV0ZSgnaWQnLCBgJHtncmlkSUR9YClcclxuXHRcdFx0Y3JlYXRlQ2FyZEl0ZW0uaW5uZXJIVE1MID0gYFxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwiY2FyZFwiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJ0aGViYWNrXCI+PGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1xdWVzdGlvblwiPjwvaT48L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwidGhlZnJvbnRcIj4ke3JhbmRvbU51bWJlclNtYWxsR3JpZFtpbmRleCsrXX08L2Rpdj5cclxuXHRcdFx0PC9kaXY+YFxyXG5cdFx0XHRzbWFsbEdyaWRDb250YWluZXIuYXBwZW5kQ2hpbGQoY3JlYXRlQ2FyZEl0ZW0pXHJcblx0XHRcdGxhcmdlR3JpZENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0b2dnbGUtbGFyZ2UtZ3JpZCcpXHJcblx0XHR9XHJcblx0fSBlbHNlIGlmICh0aGVtZVNpemVBcnJheVsxXSA9PSAnNHg0JyAmJiB0aGVtZVNpemVBcnJheVswXSA9PSAnSWNvbnMnKSB7XHJcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGdyaWRTbWFsbFNpemU7IGkrKykge1xyXG5cdFx0XHRncmlkSUQrK1xyXG5cdFx0XHRjb25zdCBjcmVhdGVDYXJkSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcblx0XHRcdGNyZWF0ZUNhcmRJdGVtLmNsYXNzTGlzdC5hZGQoJ3NpbmdsZS1jYXJkLWJveCcpXHJcblx0XHRcdGNyZWF0ZUNhcmRJdGVtLnNldEF0dHJpYnV0ZSgnaWQnLCBgJHtncmlkSUR9YClcclxuXHRcdFx0Y3JlYXRlQ2FyZEl0ZW0uaW5uZXJIVE1MID0gYFxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwiY2FyZFwiPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwidGhlYmFja1wiPjxpIGNsYXNzPVwiZmEtc29saWQgZmEtcXVlc3Rpb25cIj48L2k+PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJ0aGVmcm9udFwiPiR7cmFuZG9tSWNvblNtYWxsR3JpZFtpbmRleCsrXX08L2Rpdj5cclxuXHRcdFx0PC9kaXY+YFxyXG5cdFx0XHRzbWFsbEdyaWRDb250YWluZXIuYXBwZW5kQ2hpbGQoY3JlYXRlQ2FyZEl0ZW0pXHJcblx0XHRcdGxhcmdlR3JpZENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0b2dnbGUtbGFyZ2UtZ3JpZCcpXHJcblx0XHR9XHJcblx0fSBlbHNlIGlmICh0aGVtZVNpemVBcnJheVsxXSA9PSAnNng2JyAmJiB0aGVtZVNpemVBcnJheVswXSA9PSAnSWNvbnMnKSB7XHJcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGdyaWRCaWdTaXplOyBpKyspIHtcclxuXHRcdFx0Y29uc3QgY3JlYXRlQ2FyZEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG5cdFx0XHRjcmVhdGVDYXJkSXRlbS5jbGFzc0xpc3QuYWRkKCdzaW5nbGUtY2FyZC1ib3gnKVxyXG5cdFx0XHRjcmVhdGVDYXJkSXRlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgYCR7Z3JpZElEfWApXHJcblx0XHRcdGNyZWF0ZUNhcmRJdGVtLmlubmVySFRNTCA9IGBcclxuXHRcdFx0PGRpdiBjbGFzcz1cImNhcmRcIj5cclxuXHRcdFx0PGRpdiBjbGFzcz1cInRoZWJhY2tcIj48aSBjbGFzcz1cImZhLXNvbGlkIGZhLXF1ZXN0aW9uXCI+PC9pPjwvZGl2PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwidGhlZnJvbnRcIj4ke3JhbmRvbUljb25MYXJnZUdyaWRbaW5kZXgrK119PC9kaXY+XHJcblx0XHRcdDwvZGl2PmBcclxuXHJcblx0XHRcdGxhcmdlR3JpZENvbnRhaW5lci5hcHBlbmRDaGlsZChjcmVhdGVDYXJkSXRlbSlcclxuXHRcdFx0c21hbGxHcmlkQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3RvZ2dsZS1zbWFsbC1ncmlkJylcclxuXHRcdH1cclxuXHR9IGVsc2UgaWYgKHRoZW1lU2l6ZUFycmF5WzFdID09ICc2eDYnICYmIHRoZW1lU2l6ZUFycmF5WzBdID09ICdOdW1iZXJzJykge1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBncmlkQmlnU2l6ZTsgaSsrKSB7XHJcblx0XHRcdGNvbnN0IGNyZWF0ZUNhcmRJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuXHRcdFx0Y3JlYXRlQ2FyZEl0ZW0uY2xhc3NMaXN0LmFkZCgnc2luZ2xlLWNhcmQtYm94JylcclxuXHRcdFx0Y3JlYXRlQ2FyZEl0ZW0uc2V0QXR0cmlidXRlKCdpZCcsIGAke2dyaWRJRH1gKVxyXG5cdFx0XHRjcmVhdGVDYXJkSXRlbS5pbm5lckhUTUwgPSBgXHJcblx0XHRcdDxkaXYgY2xhc3M9XCJjYXJkXCI+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJ0aGViYWNrXCI+PGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1xdWVzdGlvblwiPjwvaT48L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwidGhlZnJvbnRcIj4ke3JhbmRvbU51bWJlckxhcmdlR3JpZFtpbmRleCsrXX08L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5gXHJcblx0XHRcdGxhcmdlR3JpZENvbnRhaW5lci5hcHBlbmRDaGlsZChjcmVhdGVDYXJkSXRlbSlcclxuXHRcdFx0c21hbGxHcmlkQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3RvZ2dsZS1zbWFsbC1ncmlkJylcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuLy8gQ1JFQVRFUyBQTEFZRVJTXHJcbmNvbnN0IG11bHRpcGxheWVyTW9kZSA9IHBsYXllcnMgPT4ge1xyXG5cdGNvbnN0IG11bHRpcGxheWVyQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvb3Rlci1tdWx0aXBsYXllcicpXHJcblx0bGV0IElEX2Rlc2t0b3AgPSAxXHJcblx0bGV0IElEX21vYmlsZSA9IDFcclxuXHRsZXQgSUQgPSAxXHJcblxyXG5cdGZvciAobGV0IGkgPSAwOyBpIDwgcGxheWVyczsgaSsrKSB7XHJcblx0XHRjb25zdCBwbGF5ZXJJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuXHRcdHBsYXllckl0ZW0uY2xhc3NMaXN0LmFkZCgnbXVsdGlwbGF5ZXItYm94LWl0ZW0nKVxyXG5cdFx0cGxheWVySXRlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgYHBsYXllciR7SUQrK31gKVxyXG5cdFx0cGxheWVySXRlbS5pbm5lckhUTUwgPSBgXHJcblx0XHQ8ZGl2IGNsYXNzPVwicGxheWVyXCI+XHJcblx0XHRcdDxwIGNsYXNzPVwic2hvcnQtbmFtZVwiPlAke0lEX21vYmlsZSsrfTwvcD5cclxuXHRcdFx0PHAgY2xhc3M9XCJsb25nLW5hbWVcIj5QbGF5ZXIgJHtJRF9kZXNrdG9wKyt9PC9wPlxyXG5cdFx0XHQ8cCBjbGFzcz1cInBsYXllcl9fcGFpci1udW1iZXIgXCI+NDwvcD5cclxuXHRcdDwvZGl2PmBcclxuXHRcdG11bHRpcGxheWVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHBsYXllckl0ZW0pXHJcblx0fVxyXG59XHJcbmNvbnN0IGNyZWF0ZXNSZWxldmFudE1vZGUgPSBwbGF5ZXIgPT4ge1xyXG5cdGNvbnN0IHNpbmdsZXBsYXllciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb290ZXItc2luZ2xlJylcclxuXHRjb25zdCBtdWx0aXBsYXllciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb290ZXItbXVsdGlwbGF5ZXInKVxyXG5cdGlmIChwbGF5ZXIgPT0gMSkge1xyXG5cdFx0c2luZ2xlcGxheWVyLnN0eWxlLmRpc3BsYXkgPSAnZmxleCdcclxuXHRcdG11bHRpcGxheWVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHR9IGVsc2UgaWYgKHBsYXllciA+IDEpIHtcclxuXHRcdHNpbmdsZXBsYXllci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcblx0XHRtdWx0aXBsYXllck1vZGUoKVxyXG5cdFx0bXVsdGlwbGF5ZXIuc3R5bGUuZGlzcGxheSA9ICdmbGV4J1xyXG5cdH1cclxufVxyXG5jb25zdCBwcmVwYXJlR2FtZSA9ICgpID0+IHtcclxuXHRjb25zdCBlbnRpcmVNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0YXJ0LWdhbWUnKVxyXG5cdGNvbnN0IHNob3dHYW1lQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYW1lLWNvbnRlbnQnKVxyXG5cdGVudGlyZU1lbnUuY2xhc3NMaXN0LnRvZ2dsZSgndG9nZ2xlLXN0YXJ0LXNldHVwJylcclxuXHRzaG93R2FtZUNvbnRlbnQuY2xhc3NMaXN0LnRvZ2dsZSgndG9nZ2xlLWdhbWUtY29udGVudCcpXHJcblx0Z2V0VXNlclNldHRpbmdzKHF1YW50aXR5UGxheWVycywgZ2V0U2l6ZSwgZ2V0VGhlbWUpXHJcblx0Y3JlYXRlc1JlbGV2YW50TW9kZSgpXHJcbn1cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vIFRPIE1PR0UgRVhQT1JUT1dBxIZcclxuZnVuY3Rpb24gY2hlY2tOdW1iZXJQYWlycygpIHtcclxuXHRjb25zdCBjYXJkQm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNpbmdsZS1jYXJkLWJveCAuY2FyZCcpXHJcblx0bGV0IHdyb25nID0gZmFsc2VcclxuXHRsZXQgdG9nZ2xlUmV2ZXJzZUNsYXNzZTEsIHRvZ2dsZVJldmVyc2VDbGFzc2UyLCBmaXJzdENsaWNrLCBzZWNvbmRDbGlja1xyXG5cdGZvciAoY29uc3QgY2FyZCBvZiBjYXJkQm94KSB7XHJcblx0XHRmdW5jdGlvbiBwcm9jZWVkKCkge1xyXG5cdFx0XHR0b2dnbGVSZXZlcnNlQ2xhc3NlMS5jbGFzc0xpc3QudG9nZ2xlKCdyZXZlcnNlJylcclxuXHRcdFx0dG9nZ2xlUmV2ZXJzZUNsYXNzZTIuY2xhc3NMaXN0LnRvZ2dsZSgncmV2ZXJzZScpXHJcblx0XHRcdHdyb25nID0gZmFsc2VcclxuXHRcdH1cclxuXHRcdGZ1bmN0aW9uIGZsaXBPdmVyKGUpIHtcclxuXHRcdFx0aWYgKCF3cm9uZyAmJiBnZXRUaGVtZUNoZWNrUGFpciA9PSAnTnVtYmVycycpIHtcclxuXHRcdFx0XHRsZXQgZWxlbWVudCA9IGUuY3VycmVudFRhcmdldFxyXG5cclxuXHRcdFx0XHRpZiAoY291bnRlckNsaWNrcyA9PSAxKSB7XHJcblx0XHRcdFx0XHR0b2dnbGVSZXZlcnNlQ2xhc3NlMSA9IGVsZW1lbnRcclxuXHRcdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgncmV2ZXJzZScpXHJcblx0XHRcdFx0XHRmaXJzdENsaWNrID0gZS5jdXJyZW50VGFyZ2V0LnRleHRDb250ZW50XHJcblx0XHRcdFx0XHRjb3VudGVyQ2xpY2tzKytcclxuXHRcdFx0XHR9IGVsc2UgaWYgKGNvdW50ZXJDbGlja3MgPT0gMikge1xyXG5cdFx0XHRcdFx0dG9nZ2xlUmV2ZXJzZUNsYXNzZTIgPSBlbGVtZW50XHJcblx0XHRcdFx0XHRlbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ3JldmVyc2UnKVxyXG5cdFx0XHRcdFx0c2Vjb25kQ2xpY2sgPSBlLmN1cnJlbnRUYXJnZXQudGV4dENvbnRlbnRcclxuXHRcdFx0XHRcdGNvdW50ZXJDbGlja3MrK1xyXG5cdFx0XHRcdFx0aWYgKGZpcnN0Q2xpY2sgPT0gc2Vjb25kQ2xpY2spIHtcclxuXHRcdFx0XHRcdFx0Y291bnRNb3ZlcyArPSAxXHJcblx0XHRcdFx0XHRcdGNvdW50UGFpcnMrK1xyXG5cdFx0XHRcdFx0XHRjaGFuZ2VQbGF5ZXJBZnRlck1vdmUrK1xyXG5cdFx0XHRcdFx0XHRzd2l0Y2hUdXJuKClcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdHdyb25nID0gdHJ1ZVxyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KHByb2NlZWQsIDEwMDApXHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKCduaWUgcsOzd25hIHNpxJknKVxyXG5cdFx0XHRcdFx0XHRjb3VudE1vdmVzICs9IDFcclxuXHRcdFx0XHRcdFx0Y2hhbmdlUGxheWVyQWZ0ZXJNb3ZlKytcclxuXHRcdFx0XHRcdFx0c3dpdGNoVHVybigpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRjb3VudGVyQ2xpY2tzID0gMVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRjb3VudE1vdmVRdWFudGl0eSgpXHJcblx0XHRcdFx0c3dpdGNoVHVybigpXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGNhcmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmbGlwT3ZlcilcclxuXHR9XHJcbn1cclxuZnVuY3Rpb24gY2hlY2tJY29uUGFpcnMoKSB7XHJcblx0Y29uc3QgY2FyZEJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zaW5nbGUtY2FyZC1ib3ggLmNhcmQnKVxyXG5cdGxldCB3cm9uZyA9IGZhbHNlXHJcblx0bGV0IHRvZ2dsZVJldmVyc2VDbGFzc2UxLCB0b2dnbGVSZXZlcnNlQ2xhc3NlMiwgZmlyc3RDbGljaywgc2Vjb25kQ2xpY2tcclxuXHJcblx0Zm9yIChjb25zdCBjYXJkIG9mIGNhcmRCb3gpIHtcclxuXHRcdGZ1bmN0aW9uIHByb2NlZWQoKSB7XHJcblx0XHRcdHRvZ2dsZVJldmVyc2VDbGFzc2UxLmNsYXNzTGlzdC50b2dnbGUoJ3JldmVyc2UnKVxyXG5cdFx0XHR0b2dnbGVSZXZlcnNlQ2xhc3NlMi5jbGFzc0xpc3QudG9nZ2xlKCdyZXZlcnNlJylcclxuXHRcdFx0d3JvbmcgPSBmYWxzZVxyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gZmxpcE92ZXIoZSkge1xyXG5cdFx0XHRpZiAoIXdyb25nICYmIGdldFRoZW1lQ2hlY2tQYWlyID09ICdJY29ucycpIHtcclxuXHRcdFx0XHRsZXQgZWxlbWVudCA9IGUuY3VycmVudFRhcmdldFxyXG5cclxuXHRcdFx0XHRpZiAoY291bnRlckNsaWNrcyA9PSAxKSB7XHJcblx0XHRcdFx0XHR0b2dnbGVSZXZlcnNlQ2xhc3NlMSA9IGVsZW1lbnRcclxuXHRcdFx0XHRcdGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgncmV2ZXJzZScpXHJcblx0XHRcdFx0XHRmaXJzdENsaWNrID0gZS5jdXJyZW50VGFyZ2V0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpJylbMV0uY2xhc3NOYW1lXHJcblx0XHRcdFx0XHRjb3VudGVyQ2xpY2tzKytcclxuXHRcdFx0XHR9IGVsc2UgaWYgKGNvdW50ZXJDbGlja3MgPT0gMikge1xyXG5cdFx0XHRcdFx0dG9nZ2xlUmV2ZXJzZUNsYXNzZTIgPSBlbGVtZW50XHJcblx0XHRcdFx0XHRlbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ3JldmVyc2UnKVxyXG5cdFx0XHRcdFx0c2Vjb25kQ2xpY2sgPSBlLmN1cnJlbnRUYXJnZXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2knKVsxXS5jbGFzc05hbWVcclxuXHRcdFx0XHRcdGNvdW50ZXJDbGlja3MrK1xyXG5cdFx0XHRcdFx0aWYgKGZpcnN0Q2xpY2sgPT0gc2Vjb25kQ2xpY2spIHtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ3RvIHByYXdkYSwgcsOzd25hIHNpxJknKVxyXG5cdFx0XHRcdFx0XHRjb3VudE1vdmVzICs9IDFcclxuXHRcdFx0XHRcdFx0Y291bnRQYWlycysrXHJcblx0XHRcdFx0XHRcdGNoYW5nZVBsYXllckFmdGVyTW92ZSsrXHJcblx0XHRcdFx0XHRcdHN3aXRjaFR1cm4oKVxyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0d3JvbmcgPSB0cnVlXHJcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQocHJvY2VlZCwgMTAwMClcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ25pZSByw7N3bmEgc2nEmScpXHJcblx0XHRcdFx0XHRcdGNvdW50TW92ZXMgKz0gMVxyXG5cdFx0XHRcdFx0XHRjaGFuZ2VQbGF5ZXJBZnRlck1vdmUrK1xyXG5cdFx0XHRcdFx0XHRzd2l0Y2hUdXJuKClcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGNvdW50ZXJDbGlja3MgPSAxXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNvdW50TW92ZVF1YW50aXR5KClcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Y2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZsaXBPdmVyKVxyXG5cdH1cclxufVxyXG5cclxuY29uc3Qgc3dpdGNoVHVybiA9ICgpID0+IHtcclxuXHRjb25zdCBhbGxQbGF5ZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBsYXllcicpXHJcblx0Y29uc3QgdGFyZ2V0VHVybiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcblx0dGFyZ2V0VHVybi5jbGFzc0xpc3QuYWRkKCd0YXJnZXQtdHVybicpXHJcblx0Y29uc3QgdHVybkluZm8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcclxuXHR0dXJuSW5mby5jbGFzc0xpc3QuYWRkKCd0dXJuLWluZm8nKVxyXG5cdHR1cm5JbmZvLnRleHRDb250ZW50ID0gJ2N1cnJlbnQgdHVybidcclxuXHRjb25zdCBxdWFudGl0eU9mUGxheWVycyA9IGFsbFBsYXllcnMubGVuZ3RoXHJcblx0Y29uc29sZS5sb2cocXVhbnRpdHlPZlBsYXllcnMpO1xyXG5cdC8vIGNvbnNvbGUubG9nKGFsbFBsYXllcnMpXHJcblx0aWYgKGNoYW5nZVBsYXllckFmdGVyTW92ZSA9PSAxICYmIHF1YW50aXR5T2ZQbGF5ZXJzID49IGNoYW5nZVBsYXllckFmdGVyTW92ZSApIHtcclxuXHRcdGFsbFBsYXllcnNbMF0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNmZGE1MTcnXHJcblx0XHRhbGxQbGF5ZXJzWzBdLmFwcGVuZENoaWxkKHRhcmdldFR1cm4pXHJcblx0XHRhbGxQbGF5ZXJzWzBdLmFwcGVuZENoaWxkKHR1cm5JbmZvKVxyXG5cdH0gZWxzZSBpZiAoY2hhbmdlUGxheWVyQWZ0ZXJNb3ZlID09IDIgJiYgcXVhbnRpdHlPZlBsYXllcnMgPj0gY2hhbmdlUGxheWVyQWZ0ZXJNb3ZlKSB7XHJcblx0XHRjb25zdCB0YXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFyZ2V0LXR1cm4nKS5yZW1vdmUoKVxyXG5cdFx0Y29uc3QgdHVybiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50dXJuLWluZm8nKS5yZW1vdmUoKVxyXG5cdFx0YWxsUGxheWVyc1swXS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnI2RmZTdlYydcclxuXHRcdGFsbFBsYXllcnNbMV0uYXBwZW5kQ2hpbGQodGFyZ2V0VHVybilcclxuXHRcdGFsbFBsYXllcnNbMV0uYXBwZW5kQ2hpbGQodHVybkluZm8pXHJcblx0XHRhbGxQbGF5ZXJzWzFdLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjZmRhNTE3J1xyXG5cdH1lbHNlIGlmIChjaGFuZ2VQbGF5ZXJBZnRlck1vdmUgPT0gMyAmJiBxdWFudGl0eU9mUGxheWVycyA+PSBjaGFuZ2VQbGF5ZXJBZnRlck1vdmUpe1xyXG5cdFx0Y29uc3QgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhcmdldC10dXJuJykucmVtb3ZlKClcclxuXHRcdGNvbnN0IHR1cm4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHVybi1pbmZvJykucmVtb3ZlKClcclxuXHRcdGFsbFBsYXllcnNbMV0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNkZmU3ZWMnXHJcblx0XHRhbGxQbGF5ZXJzWzJdLmFwcGVuZENoaWxkKHRhcmdldFR1cm4pXHJcblx0XHRhbGxQbGF5ZXJzWzJdLmFwcGVuZENoaWxkKHR1cm5JbmZvKVxyXG5cdFx0YWxsUGxheWVyc1syXS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnI2ZkYTUxNydcclxuXHRcdFxyXG5cdH1lbHNle1xyXG5cdFx0Y29uc3QgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhcmdldC10dXJuJykucmVtb3ZlKClcclxuXHRcdGNvbnN0IHR1cm4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHVybi1pbmZvJykucmVtb3ZlKClcclxuXHRcdGNvbnN0IGxhc3RFbGVtZW50ID0gYWxsUGxheWVyc1thbGxQbGF5ZXJzLmxlbmd0aCAtMV1cclxuXHRcdGNvbnNvbGUubG9nKGxhc3RFbGVtZW50KTtcclxuXHRcdGFsbFBsYXllcnNbMF0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNmZGE1MTcnXHJcblx0XHRhbGxQbGF5ZXJzWzBdLmFwcGVuZENoaWxkKHRhcmdldFR1cm4pXHJcblx0XHRhbGxQbGF5ZXJzWzBdLmFwcGVuZENoaWxkKHR1cm5JbmZvKVxyXG5cdFx0Y2hhbmdlUGxheWVyQWZ0ZXJNb3ZlID0gMVxyXG5cdH1cclxuXHRjb25zb2xlLmxvZyhjaGFuZ2VQbGF5ZXJBZnRlck1vdmUpXHJcbn1cclxuXHJcbmNvbnN0IGNvdW50TW92ZVF1YW50aXR5ID0gKCkgPT4ge1xyXG5cdGNvbnN0IG1vdmVzSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbW92ZXMnKVxyXG5cdG1vdmVzSW5wdXQudGV4dENvbnRlbnQgPSBjb3VudE1vdmVzXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGxvYWRHYW1lKCkge1xyXG5cdHByZXBhcmVHYW1lKClcclxuXHRjaGVja051bWJlclBhaXJzKClcclxuXHRjaGVja0ljb25QYWlycygpIC8vIGNoZWNrV2hpY2hQbGF5ZXJIYXNUdXJuKClcclxuXHRzd2l0Y2hUdXJuKClcclxufVxyXG5zdGFydC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxvYWRHYW1lKVxyXG5cclxuLy8gY29uc3QgaW50ZXJ2YWwgPSBjYXJkQm94ID0+IHtcclxuLy8gXHRjb25zdCB0aW1lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aW1lJylcclxuLy8gXHRsZXQgc2VjID0gMFxyXG4vLyBcdGxldCBtaW4gPSAwXHJcbi8vIFx0bGV0IGNvdW50VGltZVxyXG5cclxuLy8gXHRjYXJkQm94LmZvckVhY2goY2FyZCA9PiB7XHJcbi8vIFx0XHRjYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbi8vIFx0XHRcdGNsZWFySW50ZXJ2YWwoY291bnRUaW1lKVxyXG4vLyBcdFx0XHRpZiAoZS50YXJnZXQuY2xhc3NOYW1lID09ICd0aGViYWNrJykge1xyXG4vLyBcdFx0XHRcdGNvbnNvbGUubG9nKGUudGFyZ2V0LmNsYXNzTmFtZSA9PSAndGhlYmFjaycpO1xyXG4vLyBcdFx0XHRcdGNvdW50VGltZSA9IHNldEludGVydmFsKCgpID0+IHtcclxuLy8gXHRcdFx0XHRcdGlmIChzZWMgPCA5KSB7XHJcbi8vIFx0XHRcdFx0XHRcdHNlYysrXHJcbi8vIFx0XHRcdFx0XHRcdHRpbWVyLnRleHRDb250ZW50ID0gYCR7bWlufTowJHtzZWN9YFxyXG4vLyBcdFx0XHRcdFx0fSBlbHNlIGlmIChzZWMgPj0gOSAmJiBzZWMgPCA1OSkge1xyXG4vLyBcdFx0XHRcdFx0XHRzZWMrK1xyXG4vLyBcdFx0XHRcdFx0XHR0aW1lci50ZXh0Q29udGVudCA9IGAke21pbn06JHtzZWN9YFxyXG4vLyBcdFx0XHRcdFx0fSBlbHNlIGlmIChzZWMgPT0gNTkpIHtcclxuLy8gXHRcdFx0XHRcdFx0bWluKytcclxuLy8gXHRcdFx0XHRcdFx0c2VjID0gMFxyXG4vLyBcdFx0XHRcdFx0XHR0aW1lci50ZXh0Q29udGVudCA9IGAke21pbn06MDBgXHJcbi8vIFx0XHRcdFx0XHR9XHJcbi8vIFx0XHRcdFx0fSwgMTAwMClcclxuLy8gXHRcdFx0fVxyXG4vLyBcdFx0fSlcclxuLy8gXHR9KVxyXG4vLyB9XHJcblxyXG4vLyBSdW4gZXZlcnl0aGluZyBpbiBvcmRlclxyXG4iXX0=
